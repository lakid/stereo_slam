<launch>

	<!-- <arg name="bagfile" default=" Your bagfile here "/> -->

	<!-- Setup the camera -->
	<arg name="camera" default="/multisense"/>
	<arg name="sim_time" default="false"/>
	<param if="$(arg sim_time)" name="/use_sim_time" value="True"/>
	<param unless="$(arg sim_time)" name="/use_sim_time" value="false"/>
	<arg name="use_fovis" default="False"/>

	<!-- Run the visual odometry: You can choose between viso2 and fovis -->

	<arg if="$(arg use_fovis)" name="vodom_topic" value="/fovis/odometry" />
	<arg unless="$(arg use_fovis)" name="vodom_topic" value="/stereo_odometer/odometry" />

	<node unless="$(arg use_fovis)" pkg="viso2_ros" type="stereo_odometer" name="stereo_odometer" output="screen">
		<remap from="stereo" to="$(arg camera)"/>
		<remap from="image" to="image_rect"/>
		<remap from="$(arg camera)/left/camera_info" to="$(arg camera)/left/image_rect/camera_info"/>
		<remap from="$(arg camera)/right/camera_info" to="$(arg camera)/right/image_rect/camera_info"/>

		<!-- <remap from="camera_info" to="camera_info"/> -->
		<param name="base_link_frame_id" value="base_link"/>
		<param name="image_transport" value="raw"/>
	</node>

	<node if="$(arg use_fovis)" pkg="fovis_ros" type="fovis_stereo_odometer" name="fovis"  output="screen">
		<remap from="stereo" to="$(arg camera)"/>
		<remap from="image" to="image_rect"/>
		<param name="base_link_frame_id" value="multisense_root"/>
		<remap from="$(arg camera)/left/camera_info" to="$(arg camera)/left/image_rect/camera_info"/>
		<remap from="$(arg camera)/right/camera_info" to="$(arg camera)/right/image_rect/camera_info"/>

		<param name="image_transport" value="raw"/>
	</node>

	<!-- Stereo SLAM -->
	<node pkg="stereo_slam" type="localization" name="slam" output="screen">

		<!-- Working directory -->
		<param name="work_dir" value="/tmp" />

		<!-- Topic parameters -->
		<param name="odom_topic" value="$(arg vodom_topic)"/>
		<param name="left_topic" value="$(arg camera)/left/image_rect"/>
		<param name="right_topic" value="$(arg camera)/right/image_rect"/>
		<param name="left_info_topic" value="$(arg camera)/left/image_rect/camera_info"/>
		<param name="right_info_topic" value="$(arg camera)/right/image_rect/camera_info"/>
		<param name="image_transport" value="raw"/>
		<param name="cloud_topic" value="$(arg camera)/image_points2_color"/>
	        <param name="save_clouds" value="false"/>


		<param name="pose_frame_id" value="base_link"/>
		<param name="pose_child_frame_id" value="odom"/>

		<!-- Min displacement between graph vertices (in meters) -->
		<param name="min_displacement" value="0.25"/>

		<!-- Descriptor type: SIFT or SURF -->
		<param name="desc_type" value="SIFT"/>

		<!-- Can be "CROSSCHECK" or "RATIO" -->
		<param name="desc_matching_type" value="CROSSCHECK"/>

		<!-- Descriptor threshold for crosscheck matching (typically between 0.7-0.9) or ratio for ratio matching (typically between 0.6-0.8).  -->
		<param name="desc_thresh_ratio" value="0.88" />

		<!-- Minimum number of neighbors that will be skiped for the loop closure (tipically between 5-20, but depends on the frame rate) -->
		<param name="min_neighbor" value="10" />

		<!-- Get the n first candidates of the hash matching (tipically between 1-5) -->
		<param name="n_candidates" value="5" />

		<!-- Minimun number of descriptor matches to consider a matching as possible loop closure (>8) -->
		<param name="min_matches" value="30" />

		<!-- Minimum number of inliers to consider a matching as possible loop closure (>8) -->
		<param name="min_inliers" value="15" />

		<!-- Set to 0 for LinearSlam Solver with gauss-newton. Set to 1 for LinearSlam Solver with Levenberg -->
		<param name="g2o_algorithm" value="1" />

		<!-- Maximum number of iteration for the g2o algorithm -->
		<param name="g2o_opt_max_iter" value="10" />
	</node>

	<!-- Pointcloud collector -->
<!-- 	<node pkg="stereo_slam" type="collector" name="collector" output="screen">
		<param name="work_dir" value="/home/gbris/rosbag/stereo_slam" />

		<param name="graph_topic" value="slam/graph"/>
		<param name="cloud_topic" value="$(arg camera)/scaled/points2"/>

		<rosparam file="$(find stereo_slam)/etc/reconstruction.yaml" />

	</node> -->

</launch>
